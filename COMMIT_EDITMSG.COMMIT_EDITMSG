

 File Lint'ed
# --------------
# Please enter the commit message for your changes. Everything below
# this paragraph is ignored, and an empty message aborts the commit.
# Just close the window to accept your message.
diff --git a/EuroMillions.js b/EuroMillions.js
index 2857b30..9d921b8 100644
--- a/EuroMillions.js
+++ b/EuroMillions.js
@@ -1,4 +1,4 @@
-var EuroMillions = {
+let EuroMillions = {
     generateKey: function() {
         let key = {
             numbers: Array.apply(0, { length: 5 })
@@ -9,9 +9,9 @@ var EuroMillions = {
                 .map(function(elem) {
                     return Math.floor(Math.random() * 11) + 1;
                 })
-        }
-        return key
+        };
+        return key;
     }
-}
+};
 
-module.exports = EuroMillions
\ No newline at end of file
+module.exports = EuroMillions;
\ No newline at end of file
diff --git a/EuroMillionsDB.js b/EuroMillionsDB.js
index 35bd5f5..dffa152 100644
--- a/EuroMillionsDB.js
+++ b/EuroMillionsDB.js
@@ -1,18 +1,17 @@
-/****************************************************************************/
-/* Database connector                                                      */
-/****************************************************************************/
+       /****************************************************************************/
+       /*  Database connector                                                      */
+       /****************************************************************************/
 
-let MongoClient = require('mongodb').MongoClient
-  , assert = require('assert');
+let MongoClient = require('mongodb').MongoClient, assert = require('assert');
  
 
-/*Factory function to generate a connector to interact with the database*/ 
+/*Factory function to generate a connector to interact with the database*/
 let EuroMillionsDB = function(url, collection){
    let obj = Object.create(EuroMillionsDB.proto);
    obj.url = url;
    obj.collection = collection;
    return obj;
-}
+};
 /*Database connector implementation*/
 EuroMillionsDB.proto = {
    getUrl: function(){
@@ -23,27 +22,27 @@ EuroMillionsDB.proto = {
    },
    /*insert a record*/
    insert: function(data){
-       let url = this.url
-       let collection = this.collection
+       let url = this.url;
+       let collection = this.collection;
        return new Promise((fulfill, reject) => {
            MongoClient.connect(url, (err, db) => {
-               console.log("Connected correctly to server");
-               if(err){
-                   reject(err);    
-               } 
-               else{
-                   db.collection(collection).insert(data, (err, result) => {
-                       if(err){
-                           reject(err)
-                       }
-                       else{
-                           fulfill(result)
-                           db.close()
-                       }
-                   })
-               } 
+               console.log("Connected correctly to server");
+               if(err){
+                   reject(err);
+               }
+               else{
+                   db.collection(collection).insert(data, (err, result) => {
+                       if(err){
+                           reject(err);
+                       }
+                       else{
+                           fulfill(result);
+                           db.close();
+                       }
+                   });
+               }
            });
-       })
+       });
    },
    /*Update euromillions key for a given username. Creates new record if not present*/
    update: function(data, username){
@@ -56,7 +55,7 @@ EuroMillionsDB.proto = {
                    reject(err);
                }
                else{
-                   db.collection(collection).update({'user': username}, data, 
+                   db.collection(collection).update({'user': username}, data,
                        {upsert: true}, (err, result) => {
                        if(err){
                            reject(err);
@@ -65,39 +64,38 @@ EuroMillionsDB.proto = {
                            fulfill(result);
                            db.close();
                        }
-                   })
+                   });
                }
-           })
-       })
+           });
+       });
    },
    /*Query records*/
    getRecords: function(data) {
-       let url = this.url
-       let collection = this.collection
+       let url = this.url;
+       let collection = this.collection;
        return new Promise((fulfill, reject) => {
            MongoClient.connect(url, (err, db) => {
-               console.log("Connected correctly to server");
-               if(err){
-                   reject(err);    
-               } 
-               else{
-                   db.collection(collection).find(data).toArray((err, docs) => {
-                       if(err){
-                           reject(err)
-                       }
-                       else{
-                           fulfill(docs)
-                           db.close();
-                       }
-                   })
-               } 
+               console.log("Connected correctly to server");
+               if(err){
+                   reject(err);
+               }
+               else{
+                   db.collection(collection).find(data).toArray((err, docs) => {
+                       if(err){
+                           reject(err);
+                       }
+                       else{
+                           fulfill(docs);
+                           db.close();
+                       }
+                   });
+               }
            });
-       })
+       });
 
    }
-}
-
-module.exports = EuroMillionsDB
+};
+module.exports = EuroMillionsDB;
 
 
 
diff --git a/EuroMillionsDraw.js b/EuroMillionsDraw.js
index 4564485..72a7149 100644
--- a/EuroMillionsDraw.js
+++ b/EuroMillionsDraw.js
@@ -1,6 +1,7 @@
-var request = require('request')
+let request = require('request');
+let EuroMillionsDB = require('./EuroMillionsDB.js');
 
-var options = {
+let options = {
     method: 'get',
     url: 'https://euromillions.p.mashape.com/ResultsService/FindLast',
     json: true, // Use,If you are sending JSON data
@@ -8,13 +9,13 @@ var options = {
         // Specify headers, If any
         'X-Mashape-Key': 'IVaS9kmtSimshTpovHj6wXeTbyfAp1OeXCBjsngxP7bPEMnUPI'
     }
-}
+};
 
 request(options, function(err, res, body) {
     if (err) {
-        console.log('Error :', err)
-        return
+        console.log('Error :', err);
+        return;
     }
-    console.log(' Body :', body)
+    console.log(' Body :', body);
 
 });
\ No newline at end of file
diff --git a/EuroMillionsTwitterBot.js b/EuroMillionsTwitterBot.js
index 3921c27..edbb491 100644
--- a/EuroMillionsTwitterBot.js
+++ b/EuroMillionsTwitterBot.js
@@ -5,28 +5,29 @@ let secret = require('./TwitterApiKeys.js');
 
 let Twitter = new TwitterPackage(secret);
 
-let connector = EuroMillionsDB('mongodb://localhost:27017/EuroMillionsDraw', 'EuroMillions')
+let connector = EuroMillionsDB('mongodb://localhost:27017/EuroMillionsDraw', 'EuroMillions');
 
 Twitter.stream('statuses/filter', { track: '#MakeMeRichEuromillions' }, function(stream) {
     stream.on('data', function(tweet) {
         console.log(tweet.text);
-        let key = EuroMillionsKey.generateKey()
+        let key = EuroMillionsKey.generateKey();
         let record = {
             user: "@" + tweet.user.screen_name,
             key: key
-        }
+        };
         let reply = {
             text: "Hi " + tweet.user.name +
                 ", your euro millions key is: " +
                 key.numbers.toString() +
                 " and your stars are: " + key.stars.toString(),
-            screen_name: tweet.user.screen_name
-        }
+            screen_name: tweet.user.screen_name,
+            checked: false
+        };
         connector.update(record, tweet.user.screen_name).
         then((data) => {
-            console.log(weet.user.screen_name + " got a chance to be filthy rich!")
+            console.log(tweet.user.screen_name + " got a chance to be filthy rich!");
         }, (err) => {
-            console.log(err)
+            console.log(err);
         });
         Twitter.post('direct_messages/new', reply, function(error, tweetReply, response) {
             //if we get an error print it out